---
description: 
globs: 
alwaysApply: false
---
# Development Standards & Conventions

## Package Management
- Use **pnpm** as the package manager
- Dependencies are managed in [package.json](mdc:package.json)
- Lock file: [pnpm-lock.yaml](mdc:pnpm-lock.yaml)

## TypeScript Configuration
- Strict TypeScript configuration in [tsconfig.json](mdc:tsconfig.json)
- Full type safety throughout the codebase
- Use proper TypeScript union types for component props
- React 19 features (no forwardRef needed)

## Code Organization
```
├── app/                 # Next.js app directory
├── components/          # Reusable components
│   └── ui/             # Base UI components with CVA variants
├── lib/                # Utility functions and configurations
└── public/             # Static assets
```

## Component Development
- Create modular, reusable components
- Use CVA for component variants
- Export both component and variants
- Include proper TypeScript interfaces
- Use the cn() utility for class merging

## Styling Guidelines
- Tailwind CSS v4 for all styling
- Neutral color palette for minimal design
- Responsive design: mobile-first approach
- Dark mode support with dark: prefixes
- Consistent spacing patterns

## File Naming
- kebab-case for file names
- PascalCase for component names
- Descriptive, clear naming
- Group related components in directories

## Import Organization
- External libraries first
- Internal utilities ([lib/utils.ts](mdc:lib/utils.ts))
- Local components
- Types and interfaces

## Performance Considerations
- Optimize for Core Web Vitals
- Use Next.js Link for internal navigation
- Proper external link attributes for security
- Minimal JavaScript bundle size
